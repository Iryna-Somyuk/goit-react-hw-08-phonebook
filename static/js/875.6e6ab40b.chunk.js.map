{"version":3,"file":"static/js/875.6e6ab40b.chunk.js","mappings":"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","sources":["components/PhonebookForm/PhonebookForm.styled.jsx","redux/selector.jsx","components/PhonebookForm/PhonebookForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/SectionTitle/SectionTitle.styled.jsx","components/SectionTitle/SectionTitle.jsx","components/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\n// export const FormContainer = styled.form`\n//   display: flex;\n//   flex-direction: column;\n// `;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 12px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const Input = styled(Field)`\n  padding: 4px;\n  font-size: 16px;\n  border: 1px solid black;\n  border-radius: 4px;\n  width: 300px;\n`;\n\n// export const Input = styled.input`\n//   padding: 4px;\n//   font-size: 16px;\n//   border: 1px solid black;\n//   border-radius: 4px;\n// `;\n\nexport const ErrorMes = styled(ErrorMessage)`\n  font-weight: 400;\n  font-size: 12px;\n  color: red;\n`;\n\nexport const Btn = styled.button`\n  padding: 4px;\n  justify-content: center;\n  align-items: center;\n\n  width: 100px;\n  height: 30px;\n\n  border: none;\n  border-radius: 4px;\n  background-color: rgb(210, 156, 241);\n  color: black;\n  font-size: 16px;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: rgb(210, 110, 241);\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilterValue = filter.toLowerCase().trim();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilterValue)\n    );\n  }\n);\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormContainer,\n  Label,\n  Input,\n  ErrorMes,\n  Btn,\n} from './PhonebookForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/selector';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { addContact } from 'redux/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const PhonebookForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n\n    console.log(values);\n    if (contacts.find(contact => contact.name === values.name)) {\n      toast.error('Attention, this contact is already in the phonebook!', {\n        duration: 4000,\n      });\n      return;\n    }\n    dispatch(addContact(values));\n\n    resetForm();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormContainer>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <ErrorMes name=\"name\" component=\"span\" />\n          </Label>\n          <Label>\n            Number{' '}\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <ErrorMes name=\"number\" component=\"span\" />\n          </Label>\n          <Btn type=\"submit\">Add contact</Btn>\n        </FormContainer>\n      </Formik>\n      <Toaster position=\"top-center\" reverseOrder={true} />\n    </>\n  );\n};\n\n// Ванільна форма\n// export const PhonebookForm = ({ onSubmit }) => {\n//   const handleSubmit = event => {\n//     event.preventDefault();\n\n//     const { name, number } = event.target.elements;\n//     onSubmit(name.value, number.value);\n//     name.value = '';\n//     number.value = '';\n//   };\n\n//   return (\n//     <FormContainer onSubmit={handleSubmit}>\n//       <Label>\n//         Name\n//         <Input\n//           type=\"text\"\n//           name=\"name\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//         />\n//       </Label>\n//       <Label>\n//         Number{' '}\n//         <Input\n//           type=\"tel\"\n//           name=\"number\"\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//         />\n//       </Label>\n//       <Btn type=\"submit\">Add contact</Btn>\n//     </FormContainer>\n//   );\n// };\n\n// PhonebookForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// }\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: inline-flex;\n  flex-direction: row;\n  gap: 20px;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const ContactInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: 4px;\n  justify-content: center;\n  align-items: center;\n\n  width: 70px;\n  height: 30px;\n\n  border: none;\n  border-radius: 4px;\n  background-color: rgb(210, 156, 241);\n  color: black;\n  font-size: 16px;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: rgb(210, 110, 241);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { ContactItem, ContactInfo, DeleteBtn } from './Contact.styled';\nimport { deleteContact } from 'redux/operations';\n\nexport const Contact = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const handleDeleteContact = () => dispatch(deleteContact(id));\n\n  return (\n    <ContactItem>\n      <ContactInfo>\n        {name}: {number}\n      </ContactInfo>\n      <DeleteBtn onClick={handleDeleteContact}>Delete</DeleteBtn>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ListContacts = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","\nimport { Contact } from '../Contact/Contact';\nimport { ListContacts } from './ContactsList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selector';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  return (\n    <ListContacts>\n      {contacts.map(contact => (\n        <Contact key={contact.id} contact={contact}/>\n      ))}\n    </ListContacts>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 12px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 4px;\n  border: 1px solid black;\n  border-radius: 4px;\n  width: 300px;\n  font-size: 16px;\n`;\n","\nimport { FilterLabel, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selector';\n\nexport const Filter = () => {\n\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleChange = ev => {\n    dispatch(setFilter(ev.target.value));\n  }\n  \n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n      />\n    </FilterLabel>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const SectionTitle = styled.div`\n  padding: 20px;\n`;\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: black;\n  margin: 20px auto;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionTitle, Title } from './SectionTitle.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionTitle>\n      <Title>{title}</Title>\n      {children}\n    </SectionTitle>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const Сontainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n\n  width: 500px;\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.2), 0px 2px 2px rgba(0, 0.5, 0, 0.24);\n  background-image: linear-gradient(to bottom, #7bc6cc, #be93c5);\n`;\n","import { Helmet } from 'react-helmet';\nimport { PhonebookForm } from '../components/PhonebookForm/PhonebookForm';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { Filter } from '../components/Filter/Filter';\nimport { Section } from '../components/SectionTitle/SectionTitle';\nimport { Сontainer } from '../components/App.styled';\nimport { fetchContacts } from 'redux/operations';\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectIsLoading, selectError } from 'redux/selector';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (<>\n    <Helmet>\n    <title>Your contacts</title>\n  </Helmet>\n    <Сontainer>\n      <Section title=\"Phonebook\">\n        <PhonebookForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        {!isLoading && <ContactsList />}\n      </Section>\n    </Сontainer>\n    </>\n  );\n};\nexport default Contacts;"],"names":["FormContainer","styled","Form","Label","Input","Field","ErrorMes","ErrorMessage","Btn","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","normalizedFilterValue","toLowerCase","trim","name","includes","schema","yup","shape","required","number","initialValues","PhonebookForm","useSelector","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","console","log","find","contact","toast","duration","addContact","type","pattern","title","component","position","reverseOrder","ContactItem","ContactInfo","DeleteBtn","Contact","id","onClick","deleteContact","ListContacts","ContactsList","map","FilterLabel","FilterInput","Filter","value","onChange","ev","setFilter","target","SectionTitle","Title","Section","children","Сontainer","useEffect","fetchContacts","Helmet"],"sourceRoot":""}